(ns tasktwo.core
  (:gen-class)
  (:require clojure.test)
  (:require [cheshire.core :refer :all])
)

(def mini-data (parse-stream (clojure.java.io/reader "mini-data\\products.json")))
(def products (parse-stream (clojure.java.io/reader "acme-data\\products.json")))
(def offers  (parse-stream (clojure.java.io/reader "acme-data\\offers.json")))

(def orders-2015-02-02 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\02\\02\\orders.json")))
(def orders-2015-02-21 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\02\\21\\orders.json")))
(def orders-2015-03-04 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\03\\04\\orders.json")))
(def orders-2015-03-13 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\03\\13\\orders.json")))
(def orders-2015-04-24 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\04\\24\\orders.json")))
(def orders-2015-04-28 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\04\\28\\orders.json")))
(def orders-2015-05-07 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\05\\07\\orders.json")))
(def orders-2015-05-22 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\05\\22\\orders.json")))
(def orders-2015-05-23 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\05\\23\\orders.json")))
(def orders-2015-07-02 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\07\\02\\orders.json")))
(def orders-2015-07-09 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\07\\09\\orders.json")))
(def orders-2015-08-02 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\08\\02\\orders.json")))
(def orders-2015-08-20 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\08\\20\\orders.json")))
(def orders-2015-09-04 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\09\\04\\orders.json")))
(def orders-2015-09-08 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\09\\08\\orders.json")))
(def orders-2015-09-17 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\09\\17\\orders.json")))
(def orders-2015-09-23 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\09\\23\\orders.json")))
(def orders-2015-09-24 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\09\\24\\orders.json")))
(def orders-2015-09-28 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\09\\28\\orders.json")))
(def orders-2015-10-01 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\10\\01\\orders.json")))
(def orders-2015-10-02 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\10\\02\\orders.json")))
(def orders-2015-10-03 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\10\\03\\orders.json")))
(def orders-2015-10-04 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\10\\04\\orders.json")))
(def orders-2015-10-05 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\10\\05\\orders.json")))
(def orders-2015-10-06 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\10\\06\\orders.json")))
(def orders-2015-10-08 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\10\\08\\orders.json")))
(def orders-2015-10-10 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\10\\10\\orders.json")))
(def orders-2015-10-11 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\10\\11\\orders.json")))
(def orders-2015-10-15 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\10\\15\\orders.json")))
(def orders-2015-10-18 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\10\\18\\orders.json")))
(def orders-2015-10-23 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\10\\23\\orders.json")))
(def orders-2015-10-24 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\10\\24\\orders.json")))
(def orders-2015-10-25 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\10\\25\\orders.json")))
(def orders-2015-10-26 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\10\\26\\orders.json")))
(def orders-2015-10-27 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\10\\27\\orders.json")))
(def orders-2015-10-28 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\10\\28\\orders.json")))
(def orders-2015-11-02 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\11\\02\\orders.json")))
(def orders-2015-11-03 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\11\\03\\orders.json")))
(def orders-2015-11-04 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\11\\04\\orders.json")))
(def orders-2015-11-06 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\11\\06\\orders.json")))
(def orders-2015-11-07 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\11\\07\\orders.json")))
(def orders-2015-11-08 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\11\\08\\orders.json")))
(def orders-2015-11-09 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\11\\09\\orders.json")))
(def orders-2015-11-16 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\11\\16\\orders.json")))
(def orders-2015-11-17 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\11\\17\\orders.json")))
(def orders-2015-11-19 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\11\\19\\orders.json")))
(def orders-2015-11-20 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\11\\20\\orders.json")))
(def orders-2015-11-25 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\11\\25\\orders.json")))
(def orders-2015-11-26 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\11\\26\\orders.json")))
(def orders-2015-11-27 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\11\\27\\orders.json")))
(def orders-2015-12-01 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\12\\01\\orders.json")))
(def orders-2015-12-03 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\12\\03\\orders.json")))
(def orders-2015-12-04 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\12\\04\\orders.json")))
(def orders-2015-12-05 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\12\\05\\orders.json")))
(def orders-2015-12-06 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\12\\06\\orders.json")))
(def orders-2015-12-08 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\12\\08\\orders.json")))
(def orders-2015-12-09 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\12\\09\\orders.json")))
(def orders-2015-12-10 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\12\\10\\orders.json")))
(def orders-2015-12-11 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\12\\11\\orders.json")))
(def orders-2015-12-12 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\12\\12\\orders.json")))
(def orders-2015-12-13 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\12\\13\\orders.json")))
(def orders-2015-12-14 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\12\\14\\orders.json")))
(def orders-2015-12-15 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\12\\15\\orders.json")))
(def orders-2015-12-16 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\12\\16\\orders.json")))
(def orders-2015-12-18 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\12\\18\\orders.json")))
(def orders-2015-12-20 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\12\\20\\orders.json")))
(def orders-2015-12-21 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\12\\21\\orders.json")))
(def orders-2015-12-22 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\12\\22\\orders.json")))
(def orders-2015-12-23 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\12\\23\\orders.json")))
(def orders-2015-12-24 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\12\\24\\orders.json")))
(def orders-2015-12-26 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\12\\26\\orders.json")))
(def orders-2015-12-27 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\12\\27\\orders.json")))
(def orders-2015-12-28 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\12\\28\\orders.json")))
(def orders-2015-12-29 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\12\\29\\orders.json")))
(def orders-2015-12-30 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\12\\30\\orders.json")))
(def orders-2015-12-31 (parse-stream (clojure.java.io/reader "acme-data\\orders\\2015\\12\\31\\orders.json")))

(def products-ids
  (for [i mini-data]
    (:id i)
  )
)
(print "There are" (count products-ids) "unique products")
